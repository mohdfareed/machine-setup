#!/usr/bin/env zsh

# time the startup of the interactive shell
function timezsh {
  shell=${1-$SHELL}
  for i in $(seq 1 10); do /usr/bin/time $shell -i -c exit; done
}

# print file's content to console
function pfile {
    usage="usage: $0 file"
    if (($# != 1)) ; then
        echo $usage
        return 1
    fi
    if [[ ! -f $1 ]] ; then
        echo "\033[0;31mERROR:\033[0m '$1' is not a valid file path."
        return 1
    fi

    echo "$(< $1)"
}

# uninstall homebrew package with its dependencies
function uninstall {
    usage="usage: $0 package"
    if (($# != 1)) ; then
        echo $usage
        return 1
    fi

    brew uninstall $1
    brew autoremove
    brew cleanup
}

# zip a folder's content protected with password without compression
function zip-encrypt {
    usage="usage: $0 dir"
    if (($# != 1)) ; then
        echo $usage
        return 1
    fi
    if [[ ! -d $1 ]] ; then
        echo "\033[0;31mERROR:\033[0m '$1' is not a valid directory."
        return 1
    fi

    cd $1
    dir_name=${PWD##*/}
    zip -er0 $dir_name.zip . -x ".DS_Store" -x "._*"
    mv $dir_name.zip ..
    cd - >> /dev/null
}

# download video (or audio) from URL
function dl-video {
    usage="usage: $0 [-a] URL [dir]"
    audio=false
    dir="${HOME}/Downloads"

    if [[ $1 == '-a' ]] ; then
        audio=true
        shift
    fi

    if (($# == 2)) ; then
        if [[ ! -d $2 ]] ; then
            echo "\033[0;31mERROR:\033[0m '$2' is not a valid directory."
            return 1
        fi
        dir=$2
    elif (($# != 1)) ; then
        echo $usage
        return 1
    fi

    sub=(--write-sub --write-auto-sub --sub-lang en --embed-subs)
    cmd=(--embed-thumbnail --add-metadata -o "$dir/%(title)s.%(ext)s")
    if [[ $audio != true ]] ; then
        youtube-dl $sub $cmd --merge-output-format mp4 $1
    else
        youtube-dl -x $cmd --audio-format mp3 $1
    fi
}
